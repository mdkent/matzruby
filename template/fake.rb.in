baseruby="@BASERUBY@"
ruby="${RUBY-$baseruby}"
"eval" "{ `expr \"$ruby\" : echo > /dev/null || echo exec` $ruby "'-r"`expr \"$0\" : / > /dev/null || pwd`/${0#/}" "$@";' "}" || "exit" "$?"
class Object
  CROSS_COMPILING = RUBY_PLATFORM
  remove_const :RUBY_PLATFORM
  remove_const :RUBY_VERSION
  remove_const :RUBY_DESCRIPTION if defined?(RUBY_DESCRIPTION)
  RUBY_PLATFORM = "@arch@"
  RUBY_VERSION = "@RUBY_PROGRAM_VERSION@"
  RUBY_DESCRIPTION = "ruby #{RUBY_VERSION} (@RUBY_RELEASE_DATE@) [#{RUBY_PLATFORM}]"
end
if RUBY_PLATFORM =~ /mswin|bccwin|mingw/
  class File
    remove_const :ALT_SEPARATOR
    ALT_SEPARATOR = "\\"
  end
end

$:.unshift(File.expand_path("..", __FILE__))
prehook = proc do
  config = RbConfig::CONFIG
  mkconfig = RbConfig::MAKEFILE_CONFIG
  mkconfig["top_srcdir"] = $top_srcdir = File.expand_path("@abs_top_srcdir@")
  $extout = File.expand_path(mkconfig["EXTOUT"], mkconfig["topdir"])
  mkconfig["extout"] = config["extout"] = $extout
  mkconfig["rubyhdrdir"] = "$(top_srcdir)/include"
  config["rubyhdrdir"] = File.join(mkconfig["top_srcdir"], "include")
  mkconfig["libdir"] = config["libdir"] = mkconfig["topdir"]
  mkconfig["archdir"] = config["archdir"] = File.expand_path(File.dirname(__FILE__))
  untrace_var(:$extmk, prehook)
end
trace_var(:$extmk, prehook)
posthook = proc do
  $ruby = baseruby
  $arch_hdrdir = "$(extout)/include/$(arch)"
  untrace_var(:$ruby, posthook)
end
trace_var(:$ruby, posthook)
